// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.1
// source: message/types/proto/message.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// View indicates the (sequence, round) pair in which a message was gossiped
type View struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence uint64 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Round    uint64 `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
}

func (x *View) Reset() {
	*x = View{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_types_proto_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *View) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*View) ProtoMessage() {}

func (x *View) ProtoReflect() protoreflect.Message {
	mi := &file_message_types_proto_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use View.ProtoReflect.Descriptor instead.
func (*View) Descriptor() ([]byte, []int) {
	return file_message_types_proto_message_proto_rawDescGZIP(), []int{0}
}

func (x *View) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *View) GetRound() uint64 {
	if x != nil {
		return x.Round
	}
	return 0
}

// MsgMetadata contains common message details
type MsgMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// View in which the message was gossiped
	View *View `protobuf:"bytes,1,opt,name=view,proto3" json:"view,omitempty"`
	// ID of the validator who sent the message
	Sender []byte `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	// Validator's signature over the message
	Signature []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *MsgMetadata) Reset() {
	*x = MsgMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_types_proto_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMetadata) ProtoMessage() {}

func (x *MsgMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_message_types_proto_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgMetadata.ProtoReflect.Descriptor instead.
func (*MsgMetadata) Descriptor() ([]byte, []int) {
	return file_message_types_proto_message_proto_rawDescGZIP(), []int{1}
}

func (x *MsgMetadata) GetView() *View {
	if x != nil {
		return x.View
	}
	return nil
}

func (x *MsgMetadata) GetSender() []byte {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *MsgMetadata) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

// ProposedBlock is the proposer's block
type ProposedBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Proposed block content
	Block []byte `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	// Round in which the block was proposed
	Round uint64 `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
}

func (x *ProposedBlock) Reset() {
	*x = ProposedBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_types_proto_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposedBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposedBlock) ProtoMessage() {}

func (x *ProposedBlock) ProtoReflect() protoreflect.Message {
	mi := &file_message_types_proto_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposedBlock.ProtoReflect.Descriptor instead.
func (*ProposedBlock) Descriptor() ([]byte, []int) {
	return file_message_types_proto_message_proto_rawDescGZIP(), []int{2}
}

func (x *ProposedBlock) GetBlock() []byte {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *ProposedBlock) GetRound() uint64 {
	if x != nil {
		return x.Round
	}
	return 0
}

// RoundChangeCertificate is a collection of round-change messages used as proof that validators moved to a new round
type RoundChangeCertificate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*MsgRoundChange `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *RoundChangeCertificate) Reset() {
	*x = RoundChangeCertificate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_types_proto_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundChangeCertificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundChangeCertificate) ProtoMessage() {}

func (x *RoundChangeCertificate) ProtoReflect() protoreflect.Message {
	mi := &file_message_types_proto_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundChangeCertificate.ProtoReflect.Descriptor instead.
func (*RoundChangeCertificate) Descriptor() ([]byte, []int) {
	return file_message_types_proto_message_proto_rawDescGZIP(), []int{3}
}

func (x *RoundChangeCertificate) GetMessages() []*MsgRoundChange {
	if x != nil {
		return x.Messages
	}
	return nil
}

// MsgProposal is the initial consensus message that starts the finalization process. It's gossiped by
// a chosen proposer in a specific round and represents the proposal being voted on by the network
type MsgProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *MsgMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Proposal being voted on
	ProposedBlock *ProposedBlock `protobuf:"bytes,2,opt,name=proposed_block,json=proposedBlock,proto3" json:"proposed_block,omitempty"`
	// Keccak hash of the proposed_block
	BlockHash []byte `protobuf:"bytes,3,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	// Proof that a round-change occurred in the previous round
	RoundChangeCertificate *RoundChangeCertificate `protobuf:"bytes,4,opt,name=round_change_certificate,json=roundChangeCertificate,proto3" json:"round_change_certificate,omitempty"`
}

func (x *MsgProposal) Reset() {
	*x = MsgProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_types_proto_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgProposal) ProtoMessage() {}

func (x *MsgProposal) ProtoReflect() protoreflect.Message {
	mi := &file_message_types_proto_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgProposal.ProtoReflect.Descriptor instead.
func (*MsgProposal) Descriptor() ([]byte, []int) {
	return file_message_types_proto_message_proto_rawDescGZIP(), []int{4}
}

func (x *MsgProposal) GetMetadata() *MsgMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *MsgProposal) GetProposedBlock() *ProposedBlock {
	if x != nil {
		return x.ProposedBlock
	}
	return nil
}

func (x *MsgProposal) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *MsgProposal) GetRoundChangeCertificate() *RoundChangeCertificate {
	if x != nil {
		return x.RoundChangeCertificate
	}
	return nil
}

// MsgPrepare is sent when a validator accepts a proposal
type MsgPrepare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *MsgMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Keccak hash of the proposal being voted on
	BlockHash []byte `protobuf:"bytes,2,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
}

func (x *MsgPrepare) Reset() {
	*x = MsgPrepare{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_types_proto_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgPrepare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgPrepare) ProtoMessage() {}

func (x *MsgPrepare) ProtoReflect() protoreflect.Message {
	mi := &file_message_types_proto_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgPrepare.ProtoReflect.Descriptor instead.
func (*MsgPrepare) Descriptor() ([]byte, []int) {
	return file_message_types_proto_message_proto_rawDescGZIP(), []int{5}
}

func (x *MsgPrepare) GetMetadata() *MsgMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *MsgPrepare) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

// MsgCommit is a validator's commitment on a proposal that passed the PREPARE phase
type MsgCommit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *MsgMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Keccak hash of the proposal being voted on
	BlockHash []byte `protobuf:"bytes,2,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	// Validator's signature over block_hash
	CommitSeal []byte `protobuf:"bytes,3,opt,name=commit_seal,json=commitSeal,proto3" json:"commit_seal,omitempty"`
}

func (x *MsgCommit) Reset() {
	*x = MsgCommit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_types_proto_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCommit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCommit) ProtoMessage() {}

func (x *MsgCommit) ProtoReflect() protoreflect.Message {
	mi := &file_message_types_proto_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCommit.ProtoReflect.Descriptor instead.
func (*MsgCommit) Descriptor() ([]byte, []int) {
	return file_message_types_proto_message_proto_rawDescGZIP(), []int{6}
}

func (x *MsgCommit) GetMetadata() *MsgMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *MsgCommit) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *MsgCommit) GetCommitSeal() []byte {
	if x != nil {
		return x.CommitSeal
	}
	return nil
}

// PreparedCertificate is the last proposal to pass the PREPARE phase
type PreparedCertificate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The original MsgProposal
	ProposalMessage *MsgProposal `protobuf:"bytes,1,opt,name=proposal_message,json=proposalMessage,proto3" json:"proposal_message,omitempty"`
	// Proof the original message passed PREPARE phase
	PrepareMessages []*MsgPrepare `protobuf:"bytes,2,rep,name=prepare_messages,json=prepareMessages,proto3" json:"prepare_messages,omitempty"`
}

func (x *PreparedCertificate) Reset() {
	*x = PreparedCertificate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_types_proto_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreparedCertificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreparedCertificate) ProtoMessage() {}

func (x *PreparedCertificate) ProtoReflect() protoreflect.Message {
	mi := &file_message_types_proto_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreparedCertificate.ProtoReflect.Descriptor instead.
func (*PreparedCertificate) Descriptor() ([]byte, []int) {
	return file_message_types_proto_message_proto_rawDescGZIP(), []int{7}
}

func (x *PreparedCertificate) GetProposalMessage() *MsgProposal {
	if x != nil {
		return x.ProposalMessage
	}
	return nil
}

func (x *PreparedCertificate) GetPrepareMessages() []*MsgPrepare {
	if x != nil {
		return x.PrepareMessages
	}
	return nil
}

// MsgRoundChange is sent when a validator's round timer expires
type MsgRoundChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *MsgMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Proposal from previous round
	LatestPreparedProposedBlock *ProposedBlock `protobuf:"bytes,2,opt,name=latest_prepared_proposed_block,json=latestPreparedProposedBlock,proto3" json:"latest_prepared_proposed_block,omitempty"`
	// Certificate that proposal passed the PREPARE phase
	LatestPreparedCertificate *PreparedCertificate `protobuf:"bytes,3,opt,name=latest_prepared_certificate,json=latestPreparedCertificate,proto3" json:"latest_prepared_certificate,omitempty"`
}

func (x *MsgRoundChange) Reset() {
	*x = MsgRoundChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_types_proto_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRoundChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRoundChange) ProtoMessage() {}

func (x *MsgRoundChange) ProtoReflect() protoreflect.Message {
	mi := &file_message_types_proto_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRoundChange.ProtoReflect.Descriptor instead.
func (*MsgRoundChange) Descriptor() ([]byte, []int) {
	return file_message_types_proto_message_proto_rawDescGZIP(), []int{8}
}

func (x *MsgRoundChange) GetMetadata() *MsgMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *MsgRoundChange) GetLatestPreparedProposedBlock() *ProposedBlock {
	if x != nil {
		return x.LatestPreparedProposedBlock
	}
	return nil
}

func (x *MsgRoundChange) GetLatestPreparedCertificate() *PreparedCertificate {
	if x != nil {
		return x.LatestPreparedCertificate
	}
	return nil
}

var File_message_types_proto_message_proto protoreflect.FileDescriptor

var file_message_types_proto_message_proto_rawDesc = []byte{
	0x0a, 0x21, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x38, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0x5e, 0x0a,
	0x0b, 0x4d, 0x73, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x04,
	0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x56, 0x69, 0x65,
	0x77, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x3b, 0x0a,
	0x0d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x14,
	0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0x45, 0x0a, 0x16, 0x52, 0x6f,
	0x75, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x22, 0xe0, 0x01, 0x0a, 0x0b, 0x4d, 0x73, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x12, 0x28, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x73, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x0e, 0x70,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x51, 0x0a, 0x18, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x16, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x22, 0x55, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x50, 0x72, 0x65, 0x70, 0x61,
	0x72, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x73, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x22, 0x75, 0x0a, 0x09, 0x4d,
	0x73, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x73, 0x67,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x73, 0x65, 0x61, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x53, 0x65,
	0x61, 0x6c, 0x22, 0x86, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x43,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x10, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x73, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x4d, 0x73, 0x67, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x70,
	0x61, 0x72, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0xe5, 0x01, 0x0a, 0x0e,
	0x4d, 0x73, 0x67, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x28,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x4d, 0x73, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x53, 0x0a, 0x1e, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x65, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x1b, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x54, 0x0a,
	0x1b, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64,
	0x5f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x19, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x42, 0x0f, 0x5a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_types_proto_message_proto_rawDescOnce sync.Once
	file_message_types_proto_message_proto_rawDescData = file_message_types_proto_message_proto_rawDesc
)

func file_message_types_proto_message_proto_rawDescGZIP() []byte {
	file_message_types_proto_message_proto_rawDescOnce.Do(func() {
		file_message_types_proto_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_types_proto_message_proto_rawDescData)
	})
	return file_message_types_proto_message_proto_rawDescData
}

var file_message_types_proto_message_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_message_types_proto_message_proto_goTypes = []interface{}{
	(*View)(nil),                   // 0: View
	(*MsgMetadata)(nil),            // 1: MsgMetadata
	(*ProposedBlock)(nil),          // 2: ProposedBlock
	(*RoundChangeCertificate)(nil), // 3: RoundChangeCertificate
	(*MsgProposal)(nil),            // 4: MsgProposal
	(*MsgPrepare)(nil),             // 5: MsgPrepare
	(*MsgCommit)(nil),              // 6: MsgCommit
	(*PreparedCertificate)(nil),    // 7: PreparedCertificate
	(*MsgRoundChange)(nil),         // 8: MsgRoundChange
}
var file_message_types_proto_message_proto_depIdxs = []int32{
	0,  // 0: MsgMetadata.view:type_name -> View
	8,  // 1: RoundChangeCertificate.messages:type_name -> MsgRoundChange
	1,  // 2: MsgProposal.metadata:type_name -> MsgMetadata
	2,  // 3: MsgProposal.proposed_block:type_name -> ProposedBlock
	3,  // 4: MsgProposal.round_change_certificate:type_name -> RoundChangeCertificate
	1,  // 5: MsgPrepare.metadata:type_name -> MsgMetadata
	1,  // 6: MsgCommit.metadata:type_name -> MsgMetadata
	4,  // 7: PreparedCertificate.proposal_message:type_name -> MsgProposal
	5,  // 8: PreparedCertificate.prepare_messages:type_name -> MsgPrepare
	1,  // 9: MsgRoundChange.metadata:type_name -> MsgMetadata
	2,  // 10: MsgRoundChange.latest_prepared_proposed_block:type_name -> ProposedBlock
	7,  // 11: MsgRoundChange.latest_prepared_certificate:type_name -> PreparedCertificate
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_message_types_proto_message_proto_init() }
func file_message_types_proto_message_proto_init() {
	if File_message_types_proto_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_message_types_proto_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*View); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_types_proto_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_types_proto_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposedBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_types_proto_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoundChangeCertificate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_types_proto_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_types_proto_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgPrepare); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_types_proto_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCommit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_types_proto_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreparedCertificate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_types_proto_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRoundChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_types_proto_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_types_proto_message_proto_goTypes,
		DependencyIndexes: file_message_types_proto_message_proto_depIdxs,
		MessageInfos:      file_message_types_proto_message_proto_msgTypes,
	}.Build()
	File_message_types_proto_message_proto = out.File
	file_message_types_proto_message_proto_rawDesc = nil
	file_message_types_proto_message_proto_goTypes = nil
	file_message_types_proto_message_proto_depIdxs = nil
}
